{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\src\\\\components\\\\ThreadEditList.js\";\nimport React, { Component } from 'react';\nimport ThreadEdit from './ThreadEdit';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\n\nvar ThreadEditList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThreadEditList, _Component);\n\n  function ThreadEditList(props) {\n    var _this;\n\n    _classCallCheck(this, ThreadEditList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThreadEditList).call(this, props));\n    _this.state = {\n      threads: [{\n        id: 1,\n        display_order: 1,\n        title: 'Thread A',\n        expanded: true,\n        subThreads: [{\n          id: 1,\n          display_order: 1,\n          title: 'SubA-1'\n        }, {\n          id: 2,\n          display_order: 2,\n          title: 'SubA-2'\n        }, {\n          id: 3,\n          display_order: 3,\n          title: 'SubA-3'\n        }]\n      }, {\n        id: 2,\n        display_order: 3,\n        title: 'Thread B',\n        expanded: false,\n        subThreads: [{\n          id: 1,\n          display_order: 1,\n          title: 'SubB-1'\n        }, {\n          id: 2,\n          display_order: 3,\n          title: 'SubB-2'\n        }, {\n          id: 3,\n          display_order: 2,\n          title: 'SubB-3'\n        }]\n      }, {\n        id: 3,\n        display_order: 2,\n        title: 'Thread C',\n        expanded: true,\n        subThreads: [{\n          id: 1,\n          display_order: 1,\n          title: 'SubC-1'\n        }, {\n          id: 2,\n          display_order: 3,\n          title: 'SubC-2'\n        }, {\n          id: 3,\n          display_order: 2,\n          title: 'SubC-3'\n        }]\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ThreadEditList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }),\n        label: \"Expand all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), this.state.threads.sort(function (a, b) {\n        return a.display_order - b.display_order;\n      }).map(function (value) {\n        return React.createElement(ThreadEdit, {\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return ThreadEditList;\n}(Component);\n\nexport default ThreadEditList;","map":{"version":3,"sources":["C:\\Users\\AnhTuanPC\\PycharmProjects\\project-forum\\src\\components\\ThreadEditList.js"],"names":["React","Component","ThreadEdit","Switch","FormControlLabel","Button","ThreadEditList","props","state","threads","id","display_order","title","expanded","subThreads","sort","a","b","map","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport ThreadEdit from './ThreadEdit';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass ThreadEditList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      threads : [\r\n        {id: 1 ,display_order :1, title :'Thread A',expanded:true, subThreads: [\r\n            {id: 1, display_order: 1, title: 'SubA-1'},\r\n            {id: 2, display_order: 2, title: 'SubA-2'},\r\n            {id: 3, display_order: 3, title: 'SubA-3'}\r\n          ]},\r\n        {id: 2 ,display_order :3, title :'Thread B',expanded:false, subThreads: [\r\n            {id: 1, display_order: 1, title: 'SubB-1'},\r\n            {id: 2, display_order: 3, title: 'SubB-2'},\r\n            {id: 3, display_order: 2, title: 'SubB-3'}\r\n          ]},\r\n        {id: 3 ,display_order :2, title :'Thread C',expanded:true, subThreads: [\r\n            {id: 1, display_order: 1, title: 'SubC-1'},\r\n            {id: 2, display_order: 3, title: 'SubC-2'},\r\n            {id: 3, display_order: 2, title: 'SubC-3'}\r\n          ]},\r\n      ]\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FormControlLabel control = {<Switch/>} label = 'Expand all'/>\r\n        {this.state.threads.sort(((a, b) => a.display_order-b.display_order)).map((value) => (\r\n          <ThreadEdit value = {value}>\r\n          </ThreadEdit>\r\n        ))}\r\n        <Button variant=\"contained\" color=\"primary\">Add</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThreadEditList;"]},"metadata":{},"sourceType":"module"}