{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar createPagePosition = function createPagePosition(position, page) {\n  if (page === void 0) {\n    page = 0;\n  }\n\n  return {\n    page: page,\n    position: position\n  };\n};\n\nexports.computePages = function (limit, offset, total, reservedPageCount) {\n  var minPage = 1;\n  var maxPage = Math.floor(total / limit) + (total % limit === 0 ? 0 : 1);\n  var currentPage = Math.floor(offset / limit) + 1;\n  var previousPage = currentPage <= minPage ? 0 : currentPage - 1;\n  var nextPage = currentPage >= maxPage ? 0 : currentPage + 1;\n  var pages = [];\n  pages.push(createPagePosition(3, previousPage));\n  var lowInnerReservedPageCount = Math.max(reservedPageCount + currentPage - maxPage, 0);\n  var lowInnerEllipsisPage = currentPage - reservedPageCount - lowInnerReservedPageCount - 1;\n  var lowOuterEllipsisPage = minPage + reservedPageCount;\n\n  for (var i = minPage; i < currentPage; i++) {\n    if (i < lowOuterEllipsisPage) {\n      pages.push(createPagePosition(5, i));\n    } else {\n      pages.push(i === lowOuterEllipsisPage && i < lowInnerEllipsisPage ? createPagePosition(1) : createPagePosition(5, i));\n\n      for (var j = Math.max(i, lowInnerEllipsisPage) + 1; j < currentPage; j++) {\n        pages.push(createPagePosition(5, j));\n      }\n\n      break;\n    }\n  }\n\n  pages.push(createPagePosition(0, currentPage));\n  var highInnerReservedPageCount = Math.max(reservedPageCount - currentPage + minPage, 0);\n  var highInnerEllipsisPage = currentPage + reservedPageCount + highInnerReservedPageCount + 1;\n  var highOuterEllipsisPage = maxPage - reservedPageCount;\n\n  for (var i = currentPage + 1; i <= maxPage; i++) {\n    if (i < highInnerEllipsisPage) {\n      pages.push(createPagePosition(5, i));\n    } else {\n      pages.push(i === highInnerEllipsisPage && i < highOuterEllipsisPage ? createPagePosition(2) : createPagePosition(5, i));\n\n      for (var j = Math.max(i, highOuterEllipsisPage) + 1; j <= maxPage; j++) {\n        pages.push(createPagePosition(5, j));\n      }\n\n      break;\n    }\n  }\n\n  pages.push(createPagePosition(4, nextPage));\n  return pages;\n};\n\nexports.getOffset = function (page, limit) {\n  var offset = (page - 1) * limit;\n  return offset < 0 ? 0 : offset;\n};","map":null,"metadata":{},"sourceType":"script"}