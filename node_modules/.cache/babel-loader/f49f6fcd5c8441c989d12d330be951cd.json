{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\src\\\\components\\\\SubThreadDisplay.js\";\nimport React, { Component } from 'react';\nimport test from '../data/test.json';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nvar SubThreadDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubThreadDisplay, _Component);\n\n  function SubThreadDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, SubThreadDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubThreadDisplay).call(this, props));\n    _this.state = {\n      PageAmount: 0,\n      NextPage: 0,\n      Topics: []\n    };\n    return _this;\n  }\n\n  _createClass(SubThreadDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var tempArray = this.state.Topics.slice();\n      var Topic = test.Topics.map(function (Topic) {\n        var newTopic = {\n          'id': Topic.Id,\n          'title': Topic.Title,\n          'view': Topic.View,\n          'ds': Topic.DateStart\n        };\n        tempArray.push(newTopic);\n      });\n      this.setState({\n        PageAmount: test.PageAmount,\n        NextPage: test.NextPage,\n        Topics: tempArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        header: 'Id',\n        accessor: 'id'\n      }, {\n        header: 'Title',\n        accessor: 'title',\n        Cell: function Cell(props) {\n          return React.createElement(\"span\", {\n            className: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, props.value);\n        }\n      }, {\n        header: 'View',\n        accessor: 'view',\n        Cell: function Cell(props) {\n          return React.createElement(\"span\", {\n            className: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, props.value);\n        }\n      }, {\n        header: 'Date Start',\n        accessor: 'ds',\n        Cell: function Cell(props) {\n          return React.createElement(\"span\", {\n            className: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, props.value);\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        data: this.state.Topics,\n        columns: columns,\n        defaultPageSize: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SubThreadDisplay;\n}(Component);\n\nexport default SubThreadDisplay;","map":{"version":3,"sources":["C:\\Users\\AnhTuanPC\\PycharmProjects\\project-forum\\src\\components\\SubThreadDisplay.js"],"names":["React","Component","test","ReactTable","SubThreadDisplay","props","state","PageAmount","NextPage","Topics","tempArray","slice","Topic","map","newTopic","Id","Title","View","DateStart","push","setState","columns","header","accessor","Cell","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;;IAEOC,gB;;;;;AACH,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CADH;AAETC,MAAAA,QAAQ,EAAE,CAFD;AAGTC,MAAAA,MAAM,EAAI;AAHD,KAAb;AAFe;AASlB;;;;wCAEmB;AAChB,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkBE,KAAlB,EAAlB;AACA,UAAIC,KAAK,GAAGV,IAAI,CAACO,MAAL,CAAYI,GAAZ,CAAgB,UAACD,KAAD,EAAW;AAC/B,YAAME,QAAQ,GAAI;AAAC,gBAAMF,KAAK,CAACG,EAAb;AAAiB,mBAASH,KAAK,CAACI,KAAhC;AAAuC,kBAAQJ,KAAK,CAACK,IAArD;AAA2D,gBAAML,KAAK,CAACM;AAAvE,SAAlB;AACAR,QAAAA,SAAS,CAACS,IAAV,CAAeL,QAAf;AACP,OAHW,CAAZ;AAIA,WAAKM,QAAL,CAAc;AAACb,QAAAA,UAAU,EAAGL,IAAI,CAACK,UAAnB;AACFC,QAAAA,QAAQ,EAAGN,IAAI,CAACM,QADd;AAEFC,QAAAA,MAAM,EAAEC;AAFN,OAAd;AAGH;;;6BACY;AACL,UAAMW,OAAO,GAAG,CAAC;AACCC,QAAAA,MAAM,EAAE,IADT;AAECC,QAAAA,QAAQ,EAAE;AAFX,OAAD,EAGG;AACDD,QAAAA,MAAM,EAAE,OADP;AAEDC,QAAAA,QAAQ,EAAE,OAFT;AAGDC,QAAAA,IAAI,EAAE,cAAAnB,KAAK;AAAA,iBAAI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BA,KAAK,CAACoB,KAAhC,CAAJ;AAAA;AAHV,OAHH,EAOE;AACAH,QAAAA,MAAM,EAAE,MADR;AAEAC,QAAAA,QAAQ,EAAE,MAFV;AAGAC,QAAAA,IAAI,EAAE,cAAAnB,KAAK;AAAA,iBAAI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BA,KAAK,CAACoB,KAAhC,CAAJ;AAAA;AAHX,OAPF,EAWG;AACDH,QAAAA,MAAM,EAAE,YADP;AAEDC,QAAAA,QAAQ,EAAE,IAFT;AAGDC,QAAAA,IAAI,EAAE,cAAAnB,KAAK;AAAA,iBAAI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BA,KAAK,CAACoB,KAAhC,CAAJ;AAAA;AAHV,OAXH,CAAhB;AAiBA,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWG,MADrB;AAEI,QAAA,OAAO,EAAEY,OAFb;AAGI,QAAA,eAAe,EAAE,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ;AAWH;;;;EAnDuBpB,S;;AAuDhC,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport test from '../data/test.json'\r\nimport ReactTable from 'react-table'\r\nimport 'react-table/react-table.css'\r\n\r\n class SubThreadDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            PageAmount: 0,\r\n            NextPage: 0,\r\n            Topics  : []\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tempArray = this.state.Topics.slice();\r\n        let Topic = test.Topics.map((Topic) => {\r\n                const newTopic  = {'id': Topic.Id, 'title': Topic.Title, 'view': Topic.View, 'ds': Topic.DateStart };\r\n                tempArray.push(newTopic);\r\n        })\r\n        this.setState({PageAmount : test.PageAmount,\r\n                    NextPage : test.NextPage,\r\n                    Topics: tempArray});\r\n    }\r\n        render() {\r\n            const columns = [{\r\n                              header: 'Id',\r\n                              accessor: 'id'\r\n                            }, {\r\n                              header: 'Title',\r\n                              accessor: 'title',\r\n                              Cell: props => <span className='number'>{props.value}</span>\r\n                           }, {\r\n                              header: 'View',\r\n                              accessor: 'view',\r\n                              Cell: props => <span className='number'>{props.value}</span>\r\n                            }, {\r\n                              header: 'Date Start',\r\n                              accessor: 'ds',\r\n                              Cell: props => <span className='number'>{props.value}</span>\r\n                            }];\r\n\r\n            return (\r\n\r\n                <div>\r\n                    <ReactTable\r\n                        data={this.state.Topics}\r\n                        columns={columns}\r\n                        defaultPageSize={5}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n}\r\n\r\nexport default SubThreadDisplay;\r\n"]},"metadata":{},"sourceType":"module"}