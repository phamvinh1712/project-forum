{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnhTuanPC\\\\PycharmProjects\\\\project-forum\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { createStore } from 'redux';\nimport { connect } from \"react-redux\"; // login page\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props)); // value of data\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var us = _this.state.email;\n      var ps = _this.state.password;\n      var headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      var body = JSON.stringify({\n        us: us,\n        ps: ps\n      });\n      return fetch(\"/api/rest-auth/login/\", {\n        headers: headers,\n        body: body,\n        method: \"POST\"\n      }).then(function (res) {\n        if (res.status < 500) {\n          return res.json().then(function (data) {\n            return {\n              status: res.status,\n              data: data\n            };\n          });\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          dispatch({\n            type: 'LOGIN_SUCCESSFUL',\n            data: res.data\n          });\n          return res.data;\n        } else if (res.status === 403 || res.status === 401) {\n          dispatch({\n            type: \"AUTHENTICATION_ERROR\",\n            data: res.data\n          });\n          throw res.data;\n        } else {\n          dispatch({\n            type: \"LOGIN_FAILED\",\n            data: res.data\n          });\n          throw res.data;\n        }\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  } // check if the user input correct form\n\n\n  _createClass(Login, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.email.length > 0 && this.state.password.length > 0;\n    } // function to handle value change in field\n\n  }, {\n    key: \"render\",\n    // main screen\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"email\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Button, {\n        block: true,\n        bsSize: \"large\",\n        disabled: !this.validateForm(),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};","map":{"version":3,"sources":["C:\\Users\\AnhTuanPC\\PycharmProjects\\project-forum\\src\\components\\Login.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","createStore","connect","Login","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","us","state","email","ps","password","headers","body","JSON","stringify","fetch","method","then","res","status","json","data","console","log","dispatch","type","length","validateForm","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,YAAxC,QAA2D,iBAA3D;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN,GADiB,CAErB;;AAFqB,UAenBC,YAfmB,GAeJ,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,qBACGD,KAAK,CAACE,MAAN,CAAaC,EADhB,EACqBH,KAAK,CAACE,MAAN,CAAaE,KADlC;AAGD,KAnBkB;;AAAA,UAqBnBC,YArBmB,GAqBJ,UAAAL,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACA,UAAIC,EAAE,GAAG,MAAKC,KAAL,CAAWC,KAApB;AACA,UAAIC,EAAE,GAAG,MAAKF,KAAL,CAAWG,QAApB;AACA,UAAIC,OAAO,GAAG;AAAC,wBAAgB;AAAjB,OAAd;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA,EAAE,EAAFA,EAAD;AAAKG,QAAAA,EAAE,EAAFA;AAAL,OAAf,CAAX;AAEA,aAAOM,KAAK,CAAC,uBAAD,EAA0B;AAACJ,QAAAA,OAAO,EAAPA,OAAD;AAAUC,QAAAA,IAAI,EAAJA,IAAV;AAAgBI,QAAAA,MAAM,EAAE;AAAxB,OAA1B,CAAL,CACJC,IADI,CACC,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,GAAa,GAAjB,EAAsB;AACpB,iBAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,IAAI,EAAI;AAC7B,mBAAO;AAACF,cAAAA,MAAM,EAAED,GAAG,CAACC,MAAb;AAAqBE,cAAAA,IAAI,EAAJA;AAArB,aAAP;AACD,WAFM,CAAP;AAGD,SAJD,MAIO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,gBAAML,GAAN;AACD;AACF,OAVI,EAWJD,IAXI,CAWC,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBK,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAAE,kBAAP;AAA2BJ,YAAAA,IAAI,EAAEH,GAAG,CAACG;AAArC,WAAD,CAAR;AACA,iBAAOH,GAAG,CAACG,IAAX;AACD,SAHD,MAGO,IAAIH,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AACnDK,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAAE,sBAAP;AAA+BJ,YAAAA,IAAI,EAAEH,GAAG,CAACG;AAAzC,WAAD,CAAR;AACA,gBAAMH,GAAG,CAACG,IAAV;AACD,SAHM,MAGA;AACLG,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAAE,cAAP;AAAuBJ,YAAAA,IAAI,EAAEH,GAAG,CAACG;AAAjC,WAAD,CAAR;AACA,gBAAMH,GAAG,CAACG,IAAV;AACD;AACF,OAtBI,CAAP;AAwBD,KApDkB;;AAGjB,UAAKd,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAHiB;AAOlB,G,CAEH;;;;;mCACiB;AACb,aAAO,KAAKH,KAAL,CAAWC,KAAX,CAAiBkB,MAAjB,GAA0B,CAA1B,IAA+B,KAAKnB,KAAL,CAAWG,QAAX,CAAoBgB,MAApB,GAA6B,CAAnE;AACD,K,CAEH;;;;AAwCA;6BACW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKtB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAA6B,QAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKV,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,UAArB;AAAgC,QAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWG,QADpB;AAEE,QAAA,QAAQ,EAAE,KAAKZ,YAFjB;AAGE,QAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,EAkBE,oBAAC,MAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,QAAQ,EAAE,CAAC,KAAK6B,YAAL,EAHb;AAIE,QAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF,CADF,CADF;AA+BD;;;;EAxFiBtC,S;;AA0FpB,IAAMuC,eAAe,GAAG,SAAlBA,eAAkB,CAAArB,KAAK,EAAI;AAC/B,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAL,QAAQ,EAAI;AACrC,SAAO,EAAP;AACD,CAFD","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport {createStore} from 'redux'\r\nimport {connect} from \"react-redux\";\r\n// login page\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n// value of data\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n// check if the user input correct form\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n// function to handle value change in field\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n// function handle submit onclick event\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let us = this.state.email;\r\n    let ps = this.state.password;\r\n    let headers = {\"Content-Type\": \"application/json\"};\r\n    let body = JSON.stringify({us, ps,});\r\n\r\n    return fetch(\"/api/rest-auth/login/\", {headers, body, method: \"POST\"})\r\n      .then(res => {\r\n        if (res.status < 500) {\r\n          return res.json().then(data => {\r\n            return {status: res.status, data};\r\n          })\r\n        } else {\r\n          console.log(\"Server Error!\");\r\n          throw res;\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          dispatch({type: 'LOGIN_SUCCESSFUL', data: res.data});\r\n          return res.data;\r\n        } else if (res.status === 403 || res.status === 401) {\r\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\r\n          throw res.data;\r\n        } else {\r\n          dispatch({type: \"LOGIN_FAILED\", data: res.data});\r\n          throw res.data;\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n// main screen\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"email\" bsSize=\"large\">\r\n            <ControlLabel>Email</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}